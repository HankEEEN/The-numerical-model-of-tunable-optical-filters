clear all;

fs = 0; fe = 2; 
gs = 0; ge = 6;
Np = 3000;
Normalized_frequency = fs:(fe-fs)/Np:fe;
gL = gs:(ge-gs)/Np:ge;

% Speed of light
c = 3e8;
%Sets the refractive indices
n_eff = 3.644;
n1 = 3.69866; n2 = 3.58934; %kL = 1.5, neff = 3.644

% Set the central frequency of the grating structure fB
fB = 4.325; % THz

% Structure length
lamda = 9.51e-6;
L = 50 * lamda;

%Calculate the interface constants S
S12= (1 / (2 * n2)) * [n2 + n1 n2 - n1 ; n2 - n1 n2 + n1];
S21= (1 / (2 * n1)) * [n1 + n2 n1 - n2 ; n1 - n2 n1 + n2];

for j = 1:length(gL)
%Set the gain coefficient g
g = gL(j) / L;
for i = 1:length(Normalized_frequency)                                              
fn = fB * Normalized_frequency(i) * 1e12; 
% Calculate the propagation constant
beta = 2 * pi * (fn / c) * n_eff - 1i * g / 2;
%Calculate the optical thickness
theta1 = beta * (lamda / 2);    %For slot  lamda/2
theta2 = beta * (lamda / 2);    %For lamda lamda/2
%Calculate the medium constant P
Pn1 = [exp(-1i*theta1) 0;0 exp(1i*theta1)];
Pn2 = [exp(-1i*theta2) 0;0 exp(1i*theta2)];
%Construct the M matrix of the whole strcture
M = (Pn1*S12*Pn2*S21)^50;

%Calculate the reflection coefficient
Ramp = M(2,1) / M(1,1);
%Calculate the power reflection coefficient
Rpow = (abs(Ramp)).^2;
Reflectance(i)=Rpow;
Z(j,i) = Reflectance(i);
end
end


%My contour plot:

%Create a contour plot
figure;
% contourf(Normalized_frequency, gL, Z, [0.01, 0.1, 1, 10, 100, 1000, 10000], 'k','LineWidth',1);
% colorbar;
% hold on;
% contour(Normalized_frequency, gL, Z, [0.01, 0.1, 1, 10, 100, 1000, 10000], 'k', 'LineWidth', 1, 'ShowText', 'on');
% hold off;
contour(Normalized_frequency, gL, Z, [0.01, 0.1, 1, 10, 100, 1000, 10000], 'k', 'LineWidth', 1, 'ShowText', 'on');


%Set the limits of the axes
xlim([0.92 1.08]);
ylim([0 6]);

%Lable and title the plot
xlabel('Normalized frequency');
ylabel('Gain (gL)');
title('Contour Plot of Reflectivity');


% % Contour plot generated by chatgpt to match with the figure on the book:
% 
% % Create a contour plot
% figure;
% 
% % Define the levels for contour plot, must be in increasing order
% levels = [0.01, 0.1, 1, 10, 100, 1000, 10000];
% 
% % Create a logarithmic scale for the Z values
% Z_log = log10(Z); % Convert Z to a logarithmic scale
% 
% % Generate a filled contour plot with logarithmic levels
% [C, h] = contourf(Normalized_frequency, gL, Z_log, log10(levels), 'LineWidth', 1);
% 
% % Set the color map to have specific colors for each level range
% colormap([0 0 1; 0 0.5 0.8; 0.8 0.8 1; 1 0.7 0.7; 1 0.5 0.5; 1 0 0]); % Blue to red scale
% 
% % Set colorbar and its labels to the log scale
% c = colorbar;
% c.Ticks = log10(levels); % Set the ticks on the colorbar to match the log levels
% c.TickLabels = {'10^{-2}', '10^{-1}', '10^{0}', '10^{1}', '10^{2}', '10^{3}', '10^{4}'};
% 
% % Set the limits of the axes
% xlim([fs fe]);
% ylim([gs ge]);
% 
% % Label and title the plot
% xlabel('Normalized frequency');
% ylabel('Gain (gL)');
% title('Contour Plot of Reflectivity');







